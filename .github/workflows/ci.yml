name: CI

# Only trigger workflow when code changes, or this file is changed.
# Android has a different workflow and different rules.
on:
  push:
    paths:
      - "desktop_version/CMakeLists.txt"
      - "desktop_version/src/**.cpp"
      - "desktop_version/src/**.c"
      - "desktop_version/src/**.h"
      - "third_party/**"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "desktop_version/CMakeLists.txt"
      - "desktop_version/src/**.cpp"
      - "desktop_version/src/**.c"
      - "desktop_version/src/**.h"
      - "third_party/**"
      - ".github/workflows/ci.yml"

env:
  SRC_DIR_PATH: desktop_version

jobs:
  build-mac:
    name: Build (macos-latest)

    runs-on: macos-latest

    env:
      CXXFLAGS: -I/usr/local/include/SDL2
      LDFLAGS: -L/usr/local/lib

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install dependencies
      run: |
        brew install ninja
        curl -JLO https://github.com/libsdl-org/SDL/releases/download/release-2.28.5/SDL2-2.28.5.dmg
        hdiutil attach SDL2-2.28.5.dmg
        mkdir -p ~/Library/Frameworks
        cp -r /Volumes/SDL2/SDL2.framework ~/Library/Frameworks/

    - name: CMake configure
      run: |
        mkdir ${SRC_DIR_PATH}/build && cd ${SRC_DIR_PATH}/build
        cmake -GNinja ..
    - name: Build
      run: ninja -C ${SRC_DIR_PATH}/build

    - name: Upload binary
      uses: actions/upload-artifact@v1
      with:
        name: Vlib-macos
        path: ${{ env.SRC_DIR_PATH }}/build/libVVVVVV.dylib


  build-lin:
    name: Build (CentOS 7)

    runs-on: ubuntu-latest
    container: ghcr.io/infoteddy/vvvvvv-build@sha256:50a2f769db3ca180286e9a76c1bf06b7016544a78e1fc7a9a0cc1144c675ced1

    env:
      CXXFLAGS: -I/usr/local/include/SDL2
      LDFLAGS: -L/usr/local/lib

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: CMake configure
      run: |
        mkdir ${SRC_DIR_PATH}/build && cd ${SRC_DIR_PATH}/build
        cmake ..
    - name: Build
      run: make -j $(nproc) -C ${SRC_DIR_PATH}/build

    - name: Upload binary
      uses: actions/upload-artifact@v1
      with:
        name: Vlib-ubuntu
        path: ${{ env.SRC_DIR_PATH }}/build/libVVVVVV.so

  build-win:
    name: Build (windows-latest)

    runs-on: windows-latest

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install SDL
      run: |
        vcpkg install sdl2:x86-windows-static sdl2:x64-windows-static

    - name: CMake initial configure/generate
      run: |
        mkdir $env:SRC_DIR_PATH/build
        cd $env:SRC_DIR_PATH/build
        cmake -G "Visual Studio 17 2022" -A Win32 `
              -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" `
              -DVCPKG_TARGET_TRIPLET=x86-windows-static `
              -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded `
              -DCMAKE_BUILD_TYPE=Release ..

    - name: CMake configure (Win32)
      run: |
        cd $env:SRC_DIR_PATH/build
        cmake ..
    - name: Build (Win32)
      run: |
        cd $env:SRC_DIR_PATH/build
        cmake --build . --config Release

    - name: Upload binary (Win32)
      uses: actions/upload-artifact@v1
      with:
        name: Vlib-win32-windows
        path: ${{ env.SRC_DIR_PATH }}/build/Release/VVVVVV.dll

    - name: Cache build folder for this CMakeLists.txt (x64)
      id: cache-windows-build-64-folder
      uses: actions/cache@v3
      env:
        cache-name: cache-windows-build-64-folder-VS2022
      with:
        path: |
          desktop_version/build-64
          desktop_version/CMakeLists.txt
        key: ${{ runner.os }}-build-64-${{ env.cache-name }}-${{ hashFiles('desktop_version/CMakeLists.txt') }}

    - if: ${{ steps.cache-windows-build-64-folder.outputs.cache-hit != 'true' }}
      name: CMake initial configure/generate
      run: |
        mkdir $env:SRC_DIR_PATH/build-64
        cd $env:SRC_DIR_PATH/build-64
        cmake -G "Visual Studio 17 2022" -A x64 `
              -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" `
              -DVCPKG_TARGET_TRIPLET=x64-windows-static `
              -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded `
              -DCMAKE_BUILD_TYPE=Release ..

    - name: CMake configure (x64)
      run: |
        cd $env:SRC_DIR_PATH/build-64
        cmake ..
    - name: Build (x64)
      run: |
        cd $env:SRC_DIR_PATH/build-64
        cmake --build . --config Release

    - name: Upload binary (x64)
      uses: actions/upload-artifact@v1
      with:
        name: Vlib-x64-windows
        path: ${{ env.SRC_DIR_PATH }}/build-64/Release/VVVVVV.dll
